/*
 * Copyright 2023 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package uk.gov.hmrc.apiplatforminboundsoap.services

import java.time.{Clock, Instant, ZoneId}
import java.util.UUID
import scala.concurrent.ExecutionContext.Implicits.global
import scala.concurrent.Future.successful
import scala.io.Source
import scala.xml.Elem

import org.apache.pekko.stream.Materializer
import org.mockito.captor.ArgCaptor
import org.mockito.{ArgumentMatchersSugar, MockitoSugar}
import org.scalatest.matchers.should.Matchers
import org.scalatest.wordspec.AnyWordSpec
import org.scalatestplus.play.guice.GuiceOneAppPerSuite

import play.api.http.Status
import play.api.http.Status.INTERNAL_SERVER_ERROR
import play.api.test.Helpers.{await, defaultAwaitTimeout}
import uk.gov.hmrc.http.HeaderCarrier

import uk.gov.hmrc.apiplatforminboundsoap.connectors.SdesConnector
import uk.gov.hmrc.apiplatforminboundsoap.connectors.SdesConnector.Certex
import uk.gov.hmrc.apiplatforminboundsoap.models._
import uk.gov.hmrc.apiplatforminboundsoap.util.StaticUuidGenerator
import uk.gov.hmrc.apiplatforminboundsoap.xml.{Ics2XmlHelper, NoChangeTransformer}

class CertexSdesServiceSpec extends AnyWordSpec with Matchers with GuiceOneAppPerSuite with MockitoSugar with ArgumentMatchersSugar {
  implicit val hc: HeaderCarrier = HeaderCarrier()

  implicit val mat: Materializer = app.injector.instanceOf[Materializer]

  def readFromFile(fileName: String) = {
    xml.XML.load(Source.fromResource(fileName).bufferedReader())
  }

  trait Setup {
    val sdesConnectorMock: SdesConnector = mock[SdesConnector]
    val bodyCaptor                       = ArgCaptor[SdesRequest]
    val headerCaptor                     = ArgCaptor[Seq[(String, String)]]

    val sdesRequestTime: Instant            = Instant.parse("2020-01-02T03:04:05.006Z")
    val sdesRequestClock: Clock             = Clock.fixed(sdesRequestTime, ZoneId.of("UTC"))
    val httpStatus: Int                     = Status.OK
    val appConfigMock: SdesConnector.Config = mock[SdesConnector.Config]
    val xmlHelper: Ics2XmlHelper            = mock[Ics2XmlHelper]
    val xmlTransformer: NoChangeTransformer = new NoChangeTransformer()
    val uuidGenerator: StaticUuidGenerator  = new StaticUuidGenerator()

    val service: CertexSdesService =
      new CertexSdesService(appConfigMock, sdesConnectorMock, uuidGenerator, xmlTransformer)

    val sdesUrl      = "SDES url"
    val certexConfig = Certex(srn = "CERTEX SRN", informationType = "CERTEX info type")

    val attachmentElementContents: String =
      ""
    when(appConfigMock.baseUrl).thenReturn(sdesUrl)
    when(appConfigMock.certex).thenReturn(certexConfig)
  }

  "processMessage" should {
    "return success when connector returns success" in new Setup {
      val expectedSdesUuid           = UUID.randomUUID().toString
      val xmlBody: Elem              = readFromFile("certex/responseIES002.xml")
      val expectedMetadata           = Map(
        "srn"             -> certexConfig.srn,
        "informationType" -> certexConfig.informationType,
        "filename"        -> "certex_ca49dfbe-c5d6-4cb3-b424-ddead6c002ad.pdf"
      )
      val expectedMetadataProperties = Map.empty[String, String]
      val expectedSdesRequest        = SdesRequest(Seq.empty, expectedMetadata, expectedMetadataProperties, attachmentElementContents)
      val expectedServiceResult      = SdesSuccess(uuid = expectedSdesUuid)

      when(sdesConnectorMock.postMessage(bodyCaptor)(*)).thenReturn(successful(SdesSuccess(expectedSdesUuid)))

      val result = await(service.processMessage(xmlBody))

      result shouldBe List(expectedServiceResult)
      verify(sdesConnectorMock).postMessage(expectedSdesRequest)
      bodyCaptor hasCaptured expectedSdesRequest
    }

    "correctly set metadata properties header on SDES request" in new Setup {
      val expectedSdesUuid           = UUID.randomUUID().toString
      val xmlBody: Elem              = readFromFile("certex/responseIES002.xml")
      val expectedMetadata           = Map(
        "srn"             -> certexConfig.srn,
        "informationType" -> certexConfig.informationType,
        "filename"        -> "certex_ca49dfbe-c5d6-4cb3-b424-ddead6c002ad.pdf"
      )
      val expectedMetadataProperties =
        Map[String, String]("messageId" -> "CDCM|CTX|ca49dfbe-c5d6-4cb3-b424-ddead6c002ad", "documentSource" -> "certex", "MRN" -> "18PL12345678956540")
      val expectedSdesRequest        = SdesRequest(Seq.empty, expectedMetadata, expectedMetadataProperties, attachmentElementContents)
      val expectedServiceResult      = SdesSuccess(uuid = expectedSdesUuid)

      when(sdesConnectorMock.postMessage(bodyCaptor)(*)).thenReturn(successful(SdesSuccess(expectedSdesUuid)))

      val result = await(service.processMessage(xmlBody))

      result shouldBe List(expectedServiceResult)
      verify(sdesConnectorMock).postMessage(expectedSdesRequest)
      bodyCaptor hasCaptured expectedSdesRequest
    }

    "omit messageId metadata property on SDES request when one cannot be found in the XML" in new Setup {
      val expectedSdesUuid           = UUID.randomUUID().toString
      val xmlBody: Elem              = readFromFile("certex/responseIES002-empty-messageId.xml")
      val expectedMetadata           = Map(
        "srn"             -> certexConfig.srn,
        "informationType" -> certexConfig.informationType,
        "filename"        -> "certex_ca49dfbe-c5d6-4cb3-b424-ddead6c002ad.pdf"
      )
      val expectedMetadataProperties =
        Map[String, String]("documentSource" -> "certex", "MRN" -> "18PL12345678956540")
      val expectedSdesRequest        = SdesRequest(Seq.empty, expectedMetadata, expectedMetadataProperties, attachmentElementContents)
      val expectedServiceResult      = SdesSuccess(uuid = expectedSdesUuid)

      when(sdesConnectorMock.postMessage(bodyCaptor)(*)).thenReturn(successful(SdesSuccess(expectedSdesUuid)))

      val result = await(service.processMessage(xmlBody))

      result shouldBe List(expectedServiceResult)
      verify(sdesConnectorMock).postMessage(expectedSdesRequest)
      bodyCaptor hasCaptured expectedSdesRequest
    }

    "process response when connector returns error" in new Setup {
      val xmlBody: Elem              = readFromFile("certex/responseIES002.xml")
      val expectedMetadata           = Map(
        "srn"             -> certexConfig.srn,
        "informationType" -> certexConfig.informationType,
        "filename"        -> "certex_ca49dfbe-c5d6-4cb3-b424-ddead6c002ad.pdf"
      )
      val expectedMetadataProperties = Map.empty[String, String]
      val expectedSdesRequest        = SdesRequest(Seq.empty, expectedMetadata, expectedMetadataProperties, attachmentElementContents)
      val expectedServiceResult      = SendFailExternal("500 returned from SDES call due to some error", INTERNAL_SERVER_ERROR)

      when(sdesConnectorMock.postMessage(bodyCaptor)(*)).thenReturn(successful(SendFailExternal("some error", INTERNAL_SERVER_ERROR)))

      val result = await(service.processMessage(xmlBody))

      result shouldBe List(expectedServiceResult)
      verify(sdesConnectorMock).postMessage(expectedSdesRequest)
      bodyCaptor hasCaptured expectedSdesRequest
    }

    "not make a call to SDES when message contains empty attachment element" in new Setup {
      val xmlBody: Elem = readFromFile("certex/responseIES002-empty-elements.xml")

      val expectedServiceResult = SendNotAttempted("Embedded attachment element pcaDocumentPdf is empty")

      val result = await(service.processMessage(xmlBody))

      result shouldBe List(expectedServiceResult)
      verifyZeroInteractions(sdesConnectorMock)
    }

    "not make a call to SDES when message has no attachment element" in new Setup {
      val xmlBody: Elem = readFromFile("certex/responseIES002-missing-elements.xml")

      val result = await(service.processMessage(xmlBody))

      result shouldBe List.empty
      verifyZeroInteractions(sdesConnectorMock)
    }

    "generate random UUID for filename when messageId in message can't supply one" in new Setup {
      val xmlBody: Elem              = readFromFile("certex/responseIES002-empty-messageId.xml")
      val expectedSdesUuid           = UUID.randomUUID().toString
      val expectedFilenameUuid       = uuidGenerator.randomUuid()
      val expectedMetadata           = Map(
        "srn"             -> certexConfig.srn,
        "informationType" -> certexConfig.informationType,
        "filename"        -> s"certex_$expectedFilenameUuid.pdf"
      )
      val expectedMetadataProperties = Map.empty[String, String]
      val expectedSdesRequest        = SdesRequest(Seq.empty, expectedMetadata, expectedMetadataProperties, attachmentElementContents)
      val expectedServiceResult      = SdesSuccess(uuid = expectedSdesUuid)

      when(sdesConnectorMock.postMessage(bodyCaptor)(*)).thenReturn(successful(SdesSuccess(expectedSdesUuid)))

      val result = await(service.processMessage(xmlBody))

      result shouldBe List(expectedServiceResult)
      verify(sdesConnectorMock).postMessage(expectedSdesRequest)
      bodyCaptor hasCaptured expectedSdesRequest
    }
  }
}
