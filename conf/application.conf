# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = api-platform-inbound-soap

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.apiplatforminboundsoap.config.InjectionModule"
play.modules.enabled += "uk.gov.hmrc.apiplatforminboundsoap.config.Module"
play.modules.enabled += "uk.gov.hmrc.apiplatforminboundsoap.config.ConfigurationModule"


# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

http-verbs.proxy.enabled = "false"
passThroughProtocol = "http"
passThroughHost = "localhost"
passThroughPort = "6704"
forwardMessageUrl = "http://localhost:6704/destination/notifications?status=202"
testForwardMessageUrl = "http://localhost:6704/destination/notifications?status=202"
play.http.parser.maxMemoryBuffer: 21M

# JWT validation
hmacSecret = "a very long secret which must be more than two hundred and fifty six bits long"
jwtIssuer = "c3a9a101-937b-47c1-bc35-bdb24b12e4e5"

# Microservice specific config
microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }
    api-platform-outbound-soap {
      host = localhost
      port = 6703
    }
    secure-data-exchange-proxy {
      host = localhost
      port = 3000
      uploadPath = upload-attachment
      ics2.srn = "SRN1234"
      ics2.informationType = "infotype12345v2"
      ics2.encodeSdesReference = true
      crdl.srn = "SRN5678"
      crdl.informationType = "infotype67890"
    }
  }
}

